name: Master Build

on:
  workflow_dispatch:
    inputs:
      bool1:
        description: bool1
        required: false
        type: boolean
      bool2:
        description: bool2
        required: true
        default: false
        type: boolean
      bool3:
        description: bool3
        required: false
        default: false
        type: boolean
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: hmarr/debug-action@v2
    - run: bool1 A
      if: inputs.bool1 == 'true'
    - run: bool1 B
      if: inputs.bool1 != 'false'
    - run: bool1 C
      if: inputs.bool1 == true
    - run: bool1 D
      if: inputs.bool1 != false
    - run: bool2 A
      if: inputs.bool2 == 'true'
    - run: bool2 B
      if: inputs.bool2 != 'false'
    - run: bool2 C
      if: inputs.bool2 == true
    - run: bool2 D
      if: inputs.bool2 != false
    - run: bool3 A
      if: inputs.bool3 == 'true'
    - run: bool3 B
      if: inputs.bool3 != 'false'
    - run: bool3 C
      if: inputs.bool3 == true
    - run: bool3 D
      if: inputs.bool3 != false
    - uses: actions/checkout@v2
    - name: find location of yarn cache
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v1
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: cache node_modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
    - name: use node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        registry-url: https://registry.npmjs.org/ # Required for auth
        node-version: ${{ matrix.node-version }}
    - name: yarn install, build
      run: |
        yarn install
        yarn build
      env:
        CI: true
      # Publishes current version of packages that are not already present in the registry
    - name: publish
      run: npx --no-install lerna publish from-package --yes
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        CI: true
      # Tags the commit with the version in the a package if the tag doesn't exist
    - uses: Klemensas/action-autotag@1.2.3
      with:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        package_root: "packages/a"
        tag_prefix: "v"
